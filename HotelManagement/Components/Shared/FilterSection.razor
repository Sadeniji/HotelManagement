
@inject NavigationManager NavigationManager
<EditForm Model="Model" Enhance FormName="filter-form" OnSubmit="HandleFilter">
    <div class="container-fluid booking pb-5 wow fadeIn" data-wow-delay="0.1s">
        <div class="container">
            <div class="bg-white shadow" style="padding: 35px;">
                <div class="row g-2">
                    <div class="col-md-10">
                        <div class="row g-2">
                            <div class="col-md-3">
                                <InputDate @bind-Value="Model.CheckInDate" class="form-control datetimepicker-input" 
                                           placeholder="Check in" data-target="#date1" data-toggle="datetimepicker" />

                                @*                                 <div class="date" id="date1" data-target-input="nearest">
                                    <InputDate @bind-Value="Model.CheckInDate" class="form-control datetimepicker-input" 
                                               placeholder="Check in" data-target="#date1" data-toggle="datetimepicker" />
                                </div> *@
                            </div>
                            <div class="col-md-3">
                                <InputDate @bind-Value="Model.CheckOutDate" class="form-control datetimepicker-input" 
                                           placeholder="Check out" data-target="#date2" data-toggle="datetimepicker" />                                
                                @* <div class="date" id="date2" data-target-input="nearest">

                                    </div> *@
                            </div>
                            <div class="col-md-3">
                                <InputSelect @bind-Value="Model.NumberOfAdults" class="form-select">
                                    @for (int i = 0; i < 6; i++)
                                    {
                                        <option value="@i">@i Adult(s)</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-md-3">
                                <InputSelect @bind-Value="Model.NumberOfChildren" class="form-select">
                                    @for (int i = 0; i < 6; i++)
                                    {
                                        <option value="@i">@i @(i > 1 ? "Children" : "Child")</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary w-100">Search</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [SupplyParameterFromForm] 
    public FilterModel Model { get; set; } = new();

    [SupplyParameterFromQuery]
    public DateOnly? CheckInDate { get; set; }

    [SupplyParameterFromQuery]
    public DateOnly? CheckOutDate { get; set; }

    [SupplyParameterFromQuery]
    public int? NumberOfAdults { get; set; } = 0;

    [SupplyParameterFromQuery]
    public int? NumberOfChildren { get; set; } = 0;

    [CascadingParameter]
    public HttpContext HttpContext { get; set; } = default;

    protected override void OnInitialized()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            Model.CheckInDate = CheckInDate ?? DateOnly.FromDateTime(DateTime.Now);
            Model.CheckOutDate = CheckOutDate ?? DateOnly.FromDateTime(DateTime.Now.AddDays(1));
            Model.NumberOfAdults = NumberOfAdults;
            Model.NumberOfChildren = NumberOfChildren;
        }
    }

    private async Task HandleFilter(EditContext obj)
    {
        var roomsPageUri = NavigationManager.GetUriWithQueryParameters("/rooms", Model.TDictionary());

        await Task.Yield();
        NavigationManager.NavigateTo(roomsPageUri);
    }

}
