@page "/change-password"
@using HotelManagement.Services

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject IUserService UserService
@attribute [StreamRendering]

<div class="container">
    <h1>Change Password</h1>
    <hr/>
    <div class="row d-flex justify-content-center">
        <div class="col-sm-4">
            @if (!string.IsNullOrWhiteSpace(_message))
            {
                <p class="text-success fw-bold">@_message</p>
                <hr/>
            }
            @if (!string.IsNullOrWhiteSpace(_error))
            {
                <p class="text-danger fw-bold">@_error</p>
                <hr/>
            }
            @if (_userId != null)
            {
                <EditForm Model="@Model" Enhance FormName="change-password" OnValidSubmit="ChangePasswordAsync">
                    <DataAnnotationsValidator/>
                    <div class="mb-3">
                        <label class="form-label">Current Password</label>
                        <InputText type="password" @bind-Value="Model.CurrentPassword" class="form-control" placeholder="Enter current password"/>
                        <ValidationMessage For="() => Model.CurrentPassword" class="text-danger"/>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">New Password</label>
                        <InputText type="password" @bind-Value="Model.NewPassword" class="form-control" placeholder="Enter new password"/>
                        <ValidationMessage For="() => Model.NewPassword" class="text-danger"/>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Confirm New Password</label>
                        <InputText type="password" @bind-Value="Model.ConfirmNewPassword" class="form-control" placeholder="Confirm new password"/>
                        <ValidationMessage For="() => Model.ConfirmNewPassword" class="text-danger"/>
                    </div>
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-sm btn-primary" disabled="@_isProcessing">
                            @(_isProcessing ? "Processing..." : "Change Password")
                        </button>
                    </div>
                </EditForm>
            }
        </div>
    </div>


</div>

@code {
    private string? _message;
    private string? _error;
    private string? _userId;
    private bool _isProcessing;

    [SupplyParameterFromForm]
    private ChangePasswordModel Model { get; set; } = new();

    [CascadingParameter]
    public HttpContext HttpContext { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity == null || !authState.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/");
            return;
        }
        _userId = authState.User.GetUserId()!;
    }

    private async Task ChangePasswordAsync()
    {
        _message = _error = null;
        _isProcessing = true;
        var userId = HttpContext.User.GetUserId();
        var result = await UserService.ChangePasswordAsync(Model, userId);
        
        if (!result.IsSuccess)
        {
            _error = result.ErrorMessage;
        }
        else
        {
            _message = "Passage changed successfully";
        }

        _isProcessing = false;

    }

}
